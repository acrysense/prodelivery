"use strict";

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
document.addEventListener('DOMContentLoaded', function () {
  // scrollbar
  function initializeSimpleBar() {
    var containers = document.querySelectorAll('.scrollable');
    containers.forEach(function (container) {
      if (window.innerWidth >= 768) {
        new SimpleBar(container);
      }
    });
  }
  window.addEventListener('load', initializeSimpleBar);
  window.addEventListener('resize', initializeSimpleBar);

  // inputmask
  Inputmask().mask(document.querySelectorAll('input'));

  // checker
  var useItemChecker = function useItemChecker(els, onClickOutside) {
    var checkBodyClick = function checkBodyClick(e) {
      var currentEl = e.target;
      while (currentEl) {
        if (els.includes(currentEl)) break;
        currentEl = currentEl.parentNode;
      }
      if (!currentEl) {
        onClickOutside();
        removeBodyChecker();
      }
    };
    function setBodyChecker() {
      document.documentElement.addEventListener('click', checkBodyClick);
    }
    function removeBodyChecker() {
      document.documentElement.removeEventListener('click', checkBodyClick);
    }
    return {
      setBodyChecker: setBodyChecker,
      removeBodyChecker: removeBodyChecker
    };
  };

  // menu
  var hamburger = document.getElementById('hamburger-toggle');
  var menu = document.getElementById('menu');
  if (menu && hamburger) {
    hamburger.addEventListener('click', function (event) {
      event.preventDefault();
      if (menu.classList.contains('is--active')) {
        hamburger.classList.remove('is--active');
        menu.classList.remove('is--active');
        document.body.classList.remove('scroll-disabled');
      } else {
        if (profileWrap.classList.contains('is--active')) {
          profileTrigger.classList.remove('is--active');
          profileWrap.classList.remove('is--active');
          document.body.classList.remove('scroll-disabled');
        }
        if (categoriesWrap.classList.contains('is--active')) {
          categoriesTrigger.classList.remove('is--active');
          categoriesWrap.classList.remove('is--active');
          document.body.classList.remove('scroll-disabled');
        }
        hamburger.classList.add('is--active');
        menu.classList.add('is--active');
        document.body.classList.add('scroll-disabled');
      }
    });
  }

  // categories
  var categoriesTrigger = document.getElementById('categories-toggle');
  var categoriesWrap = document.querySelector('.categories');
  var categoriesClose = document.querySelector('.categories__back');
  if (categoriesWrap && categoriesTrigger && categoriesClose) {
    categoriesTrigger.addEventListener('click', function (event) {
      event.preventDefault();
      if (categoriesWrap.classList.contains('is--active')) {
        categoriesTrigger.classList.remove('is--active');
        categoriesWrap.classList.remove('is--active');
        document.body.classList.remove('scroll-disabled');
      } else {
        categoriesTrigger.classList.add('is--active');
        categoriesWrap.classList.add('is--active');
        document.body.classList.add('scroll-disabled');
      }
    });
    categoriesClose.addEventListener('click', function (event) {
      event.preventDefault();
      if (categoriesWrap.classList.contains('is--active')) {
        categoriesTrigger.classList.remove('is--active');
        categoriesWrap.classList.remove('is--active');
        document.body.classList.remove('scroll-disabled');
      }
    });
  }

  // profile
  var profileTrigger = document.getElementById('profile-toggle');
  var profileWrap = document.querySelector('.profile');
  if (profileWrap && profileTrigger) {
    profileTrigger.addEventListener('click', function (event) {
      event.preventDefault();
      if (profileWrap.classList.contains('is--active')) {
        profileTrigger.classList.remove('is--active');
        profileWrap.classList.remove('is--active');
        document.body.classList.remove('scroll-disabled');
      } else {
        if (menu.classList.contains('is--active')) {
          hamburger.classList.remove('is--active');
          menu.classList.remove('is--active');
          document.body.classList.remove('scroll-disabled');
        }
        if (categoriesWrap.classList.contains('is--active')) {
          categoriesTrigger.classList.remove('is--active');
          categoriesWrap.classList.remove('is--active');
          document.body.classList.remove('scroll-disabled');
        }
        profileTrigger.classList.add('is--active');
        profileWrap.classList.add('is--active');
        document.body.classList.add('scroll-disabled');
      }
    });
  }

  // select
  var selected = document.querySelectorAll('.select-box__selected');
  var optionsList = document.querySelectorAll('.select-box__option');
  if (selected) {
    selected.forEach(function (item) {
      var close = function close() {
        document.querySelectorAll('.select-box__container').forEach(function (child) {
          child.classList.remove('select-box__container--active');
          child.removeAttribute('style');
        });
        document.querySelectorAll('.select-box__selected').forEach(function (child) {
          return child.classList.remove('select-box__selected--active');
        });
      };
      var itemChecker = useItemChecker([item.parentNode].concat(_toConsumableArray(selected)), close);
      item.addEventListener('click', function () {
        var container = item.previousElementSibling;
        if (container.classList.contains('select-box__container--active')) {
          close();
        } else {
          close();
          container.classList.add('select-box__container--active');
          item.classList.add('select-box__selected--active');
          itemChecker.setBodyChecker();
        }
      });
    });
  }
  if (optionsList) {
    optionsList.forEach(function (option) {
      option.addEventListener('click', function (event) {
        event.preventDefault();
        var parent = option.closest('.select-box');
        var currentContainer = parent.querySelector('.select-box__container');
        var currentSelected = parent.querySelector('.select-box__selected');
        var currentSelectedPlaceholder = currentSelected.querySelector('.select-box__placeholder');
        var currentSelectedValue = currentSelected.querySelector('.select-box__values');
        if (option.querySelector('input').checked) {
          return false;
        } else {
          option.querySelector('input').checked = true;
        }
        if (currentSelectedPlaceholder.classList.contains('select-box__placeholder--active')) {
          currentSelectedPlaceholder.classList.remove('select-box__placeholder--active');
          currentSelectedValue.classList.add('select-box__values--active');
        }
        currentSelectedValue.innerHTML = option.querySelector('.select-box__title').innerHTML;
        currentContainer.classList.remove('select-box__container--active');
        currentSelected.classList.remove('select-box__selected--active');
      });
    });
  }

  // product add
  var productAddBtn = document.querySelectorAll('.product__btn');
  if (productAddBtn) {
    productAddBtn.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        var parent = item.closest('.product__add');
        if (!parent.classList.contains('is--added')) {
          parent.classList.add('is--added');
        }
      });
    });
  }

  // product counter
  var productQuantityBtnMinus = document.querySelector('.c-btn-quantity__btn--minus');
  var productQuantityBtnPlus = document.querySelector('.c-btn-quantity__btn--plus');
  if (productQuantityBtnMinus && productQuantityBtnPlus) {
    var updatePrice = function updatePrice(quantity) {
      priceElement.textContent = (unitPrice * quantity).toFixed(2);
    };
    var valueElement = document.querySelector('.c-btn-quantity__value .value');
    var priceElement = document.querySelector('.c-btn-quantity__value .price');
    var unitPrice = parseFloat(priceElement.textContent);
    productQuantityBtnMinus.addEventListener('click', function () {
      var currentValue = parseInt(valueElement.textContent);
      if (currentValue > 1) {
        currentValue--;
        valueElement.textContent = currentValue;
        updatePrice(currentValue);
      }
    });
    productQuantityBtnPlus.addEventListener('click', function (event) {
      event.preventDefault();
      var currentValue = parseInt(valueElement.textContent);
      currentValue++;
      valueElement.textContent = currentValue;
      updatePrice(currentValue);
    });
  }

  // main products slider
  var mainProductsSlider = document.querySelectorAll('.main-products__slider .swiper');
  if (mainProductsSlider) {
    mainProductsSlider.forEach(function (slider) {
      var myMainBannersSlider = new Swiper(slider, {
        slidesPerView: 6,
        spaceBetween: 15,
        loop: true,
        breakpoints: {
          1800: {
            slidesPerView: 6
          },
          1600: {
            slidesPerView: 5
          },
          768: {
            slidesPerView: 4
          },
          0: {
            slidesPerView: 'auto'
          }
        }
      });
    });
  }
});